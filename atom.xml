<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mzqk.github.io</id>
    <title>MZZZ</title>
    <updated>2020-07-03T02:01:40.221Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mzqk.github.io"/>
    <link rel="self" href="https://mzqk.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://mzqk.github.io/images/avatar.png</logo>
    <icon>https://mzqk.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, MZZZ</rights>
    <entry>
        <title type="html"><![CDATA[Oracle 安装]]></title>
        <id>https://mzqk.github.io/post/oracle-an-zhuang/</id>
        <link href="https://mzqk.github.io/post/oracle-an-zhuang/">
        </link>
        <updated>2020-06-02T05:48:56.000Z</updated>
        <content type="html"><![CDATA[<h1 id="linux-安装-oracle软件">Linux 安装 Oracle软件</h1>
<h2 id="环境准备">环境准备</h2>
<h3 id="创建用户和用户组">创建用户和用户组</h3>
<pre><code class="language-bash">groupadd oinstall
groupadd dba
useradd -g oinstall -G dba oracle
passwd oracle
</code></pre>
<h3 id="安装依赖">安装依赖</h3>
<pre><code class="language-bash">yum install gcc make binutils gcc-c++ \
compat-libstdc++-33elfutils-libelf-devel \
elfutils-libelf-devel-static ksh libaio \
libaio-develnumactl-devel sysstat unixODBC \
unixODBC-devel pcre-devel –y
</code></pre>
<h3 id="内核参数调整">内核参数调整</h3>
<ol>
<li>关闭selinux</li>
</ol>
<blockquote>
<p>/etc/selinux/config</p>
</blockquote>
<pre><code class="language-bash"># 修改配置文件参数 SELINUX=disabled
setenforce 0
</code></pre>
<ol start="2">
<li>修改系统参数（可选）</li>
</ol>
<blockquote>
<p>/etc/sysctl.conf</p>
</blockquote>
<pre><code class="language-vim">fs.aio-max-nr = 1048576
fs.file-max = 6815744
#若安装数据库有ORA-27102报错，可调大kernel.shmall、kernel.shmmax值
kernel.shmall = 4294967296
#shmall 是全部允许使用的共享内存大小
kernel.shmmax = 68719476736 
#shmmax 是单个段允许使用的大小，为本机物理内存的一半，单位为byte。
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576 
</code></pre>
<pre><code class="language-bash">sysctl -p
</code></pre>
<ol start="3">
<li>修改用户限制（可选）</li>
</ol>
<blockquote>
<p>/etc/security/limits.conf</p>
</blockquote>
<pre><code class="language-bash"># 末尾添加
oracle           soft    nproc           2047
oracle           hard    nproc           16384
oracle           soft    nofile          1024
oracle           hard    nofile         65536
oracle           soft    stack           10240 
</code></pre>
<blockquote>
<p>/etc/pam.d/login</p>
</blockquote>
<pre><code class="language-bash"># 末尾添加
session required  /lib64/security/pam_limits.so
session required   pam_limits.so 
</code></pre>
<blockquote>
<p>/etc/profile</p>
</blockquote>
<pre><code class="language-bash"># 末尾添加
if [ $USER = &quot;oracle&quot; ]; then
  if [ $SHELL = &quot;/bin/ksh&quot; ]; then
      ulimit -p 16384
      ulimit -n 65536
  else
      ulimit -u 16384 -n 65536
  fi
fi 
</code></pre>
<h3 id="配置用户环境">配置用户环境</h3>
<ol>
<li>创建软件安装路径</li>
</ol>
<pre><code class="language-bash"># 目录与配置文件相关，请按需修改
mkdir -p /data/oracle/product/11.2.0
mkdir /data/oracle/oradata
mkdir /data/oracle/inventory
mkdir /data/oracle/fast_recovery_area

chown -R oracle:oinstall /data/oracle
chmod -R 775 /data/oracle
</code></pre>
<ol start="2">
<li>配置用户环境变量</li>
</ol>
<blockquote>
<p>.bash_profile</p>
</blockquote>
<pre><code class="language-vim"># 末尾添加
ORACLE_BASE=/data/oracle
ORACLE_HOME=$ORACLE_BASE/product/11.2.0
ORACLE_SID=orcl # 实例名与配置文件相关，请按需修改
PATH=$PATH:$ORACLE_HOME/bin
export ORACLE_BASE ORACLE_HOME ORACLE_SID PATH
</code></pre>
<pre><code class="language-bash">source .bash_profile
</code></pre>
<h2 id="配置信息">配置信息</h2>
<h3 id="数据库响应文件">数据库响应文件</h3>
<blockquote>
<p>db_install.rsp</p>
</blockquote>
<pre><code class="language-bash"># 静默安装，无需图形界面
oracle.install.option=INSTALL_DB_SWONLY
#主机名修改
ORACLE_HOSTNAME=centos36181
UNIX_GROUP_NAME=oinstall
INVENTORY_LOCATION=/data/oracle/inventory
SELECTED_LANGUAGES=en,zh_CN
ORACLE_HOME=/data/oracle/product/11.2.0
ORACLE_BASE=/data/oracle
oracle.install.db.InstallEdition=EE
oracle.install.db.DBA_GROUP=dba
oracle.install.db.OPER_GROUP=dba
# 客户端字符串
oracle.install.db.config.starterdb.characterSet=ZHS16GBK
DECLINE_SECURITY_UPDATES=true
</code></pre>
<h3 id="库实例响应文件">库实例响应文件</h3>
<blockquote>
<p>dbca.rsp</p>
</blockquote>
<pre><code class="language-vim"># 选择创建数据库模式
[CREATEDATABASE]

# 全局数据库的名字=SID+主机域名
GDBNAME = &quot;orcl.test&quot;
# 对应的实例名字
SID = &quot;orcl&quot;
# 建库用的模板文件
TEMPLATENAME = &quot;General_Purpose.dbc&quot;
# SYS管理员密码
SYSPASSWORD = &quot;123456&quot;
# SYSTEM管理员密码
SYSTEMPASSWORD = &quot;123456&quot;

# 数据文件存放目录
DATAFILEDESTINATION =/data/oracle/oradata
# 恢复数据存放目录
RECOVERYAREADESTINATION=/data/oracle/fast_recovery_area
# 字符集，重要!!! 建库后一般不能更改，所以建库前要确定清楚。
# (CHARACTERSET = &quot;AL32UTF8&quot; NATIONALCHARACTERSET= &quot;UTF8&quot;)
CHARACTERSET = &quot;ZHS16GBK&quot;
# oracle使用物理内存80%（可选）
TOTALMEMORY = &quot;1638&quot; 
</code></pre>
<h2 id="软件安装与卸载">软件安装与卸载</h2>
<h3 id="安装数据库">安装数据库</h3>
<pre><code class="language-bash"># 使用oracle用户
./runInstaller -silent -responseFile /database/response/db_install.rsp -ignorePrereq
</code></pre>
<p>以 root 用户的身份执行以下脚本:<br>
1. /data/oracle/inventory/orainstRoot.sh<br>
2. /data/oracle/product/11.2.0/root.sh</p>
<h3 id="配置监听">配置监听</h3>
<pre><code class="language-bash"># 使用oracle用户
netca /silent /responseFile /database/response/netca.rsp
</code></pre>
<h3 id="安装库实例">安装库实例</h3>
<pre><code class="language-bash"># 使用oracle用户
dbca -silent -responseFile /database/response/dbca.rsp
</code></pre>
<h3 id="卸载数据库">卸载数据库</h3>
<pre><code class="language-bash">dbca -silent -deleteDatabase -responseFile /database/response/dbca.rsp
</code></pre>
<h2 id="常见问题处理">常见问题处理</h2>
<ol>
<li>ORA-12514: TNS:listener does not currently know of service requested in connect<br>
修改文件/data/oracle/product/11.2.0/network/admin/listener.ora</li>
</ol>
<pre><code class="language-vim">SID_LIST_LISTENER =  
(SID_LIST =  
  (SID_DESC =  
  (GLOBAL_DBNAME = orcl)
  (SID_NAME = orcl)
  )
)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何阅读一本书]]></title>
        <id>https://mzqk.github.io/post/ru-he-yue-du-yi-ben-shu/</id>
        <link href="https://mzqk.github.io/post/ru-he-yue-du-yi-ben-shu/">
        </link>
        <updated>2018-12-20T07:39:52.000Z</updated>
        <content type="html"><![CDATA[<h1 id="如何阅读一本书">如何阅读一本书</h1>
<p>挑出阅读的层次说明</p>
<h2 id="基础阅读层次">基础阅读层次</h2>
<h4 id="准备阅读阶段">准备阅读阶段</h4>
<h4 id="认字阶段">认字阶段</h4>
<h4 id="读写阶段">读写阶段</h4>
<h4 id="基础阅读阶段">基础阅读阶段</h4>
<h2 id="检视阅读层次">检视阅读层次</h2>
<h3 id="第一阶段略读">第一阶段：略读</h3>
<ol>
<li>先看书名页，然后如果有序就先看序。</li>
<li>研究目录页，对这本书的基本架构做概括性的理解。</li>
<li>如果书中附有索引，也要检阅一下。</li>
<li>如果那是本包着书衣的新书，不妨读一下出版者的介绍。</li>
<li>从你对一本书的目录很概略，甚至有点模糊的印象当中，开始挑几个看来跟主题息息相关的篇章来看。</li>
<li>最后一步，把书打开来，东翻翻西翻翻，念个一两段．有时候连续读几页，但不要太多。</li>
</ol>
<h3 id="第二阶段粗浅阅读">第二阶段：粗浅阅读</h3>
<ol>
<li>
<p>头一次面对一本难读的书的时候，从头到尾先读完一遍，碰到不懂的地方不要停下来查询或思索。</p>
</li>
<li>
<p>提升阅读的速度： 将大拇指与食指、中指合并在一起，用这个“指针”顺着一行一行的字移动下去，速度要比你眼睛感觉的还要快一点。强迫自己的眼睛跟着手部的动作移动 。一旦你的眼睛能跟着手移动时，你就能读到那些字句了。</p>
</li>
</ol>
<h3 id="第三阶段主动的基础阅读">第三阶段：主动的基础阅读</h3>
<p><em>一个阅读者要提出的四个基本问题</em></p>
<ol>
<li>整体来说，这本书到底在谈些什么？</li>
<li>作者细部说了什么，怎么说的？</li>
<li>这本书说得有道理吗？</li>
<li>这本书跟你有什么关系？</li>
</ol>
<h3 id="第四阶段做笔记">第四阶段:做笔记</h3>
<ol>
<li>画底线—在主要的重点，或重要又有力量的句子下画线。</li>
<li>在画底线处的栏外再加画一道线—把你已经画线的部分再强调一遍，或是某一段很重要 ，但要画底线太长了，便在这一整段外加上一个记号。</li>
<li>在空白处做星号或其他符号—要慎用，只用来强调书中十来个最重要的声明或段落即可。你可能想要将做过这样记号的地方每页折一个角，或是夹一张书签，这样你随时从书架上拿起这本书，打开你做记号的地方，就能唤醒你的记忆。</li>
<li>在空白处 编号—作者的某个论点发展出一连串的重要陈述时，可以做顺序编号。</li>
<li>在空白处记下其他的页码—强调作者在书中其他部分也有过同样的论点，或相关 的要点，或是与此处观点不同的地方。这样做能让散布全书的想法统一集中起来。许多读者会用Cf这样的记号，表示比较或参照的意思。</li>
<li>将关键字或句子圈出来—这跟画底线是同样的功能。</li>
<li>在书页的空白处做笔记—在阅读某一章节时，你可能会有些问题（或答案），在空白处记下来，这样可以帮你回 想起你的问题或答案。你也可以将复杂的论点简化说明在书页的空白处。或是记下全书所有主要论点的发展顺序。书中最后一页可以用来作为个人的索引 页，将作者的主要观点依序记下来。</li>
</ol>
<h2 id="分析阅读层次">分析阅读层次</h2>
<h3 id="第一阶段找出共通的词义">第一阶段：找出共通的词义</h3>
<h4 id="第一个规则">第一个规则</h4>
<p>你一定要知道自己在读的是哪一类书，而且要越早知道越好。</p>
<h4 id="第二个规则">第二个规则</h4>
<p>使用一个单一的句子，或最多几句话（一小段文字）来叙述整本书的内容。</p>
<h4 id="第三个规则">第三个规则</h4>
<p>将书中重要篇章列举出来，说明它们如何按照顺序组成一个整体的架构。</p>
<p>根据第三个规则，可以有一套运用的公式。这个公式是可以通用的。根据第二个规则，我们可以说出这本书的内容是如此这般。做完这件事之后，我们可 以依照第三个规则，将内容大纲排列如下：(1)作者将全书分成五个部分，第一部分谈的是什么，第二部分谈的是什么，第三部分谈的是别的事，第四部分 则是另外的观点，第五部分又是另一些事。(2)第一个主要的部分又分成三个段落，第一段落为X，第二段落为Y，第三段落为Z。(3)在第一部分的第一阶段 ，作者有四个重点，第一个重点是A，第二个重点是B，第三个重点是C，第四个重点是D等等。</p>
<h4 id="第四个规则">第四个规则</h4>
<p>找出作者要问的问题。一本书的作者在开始写作时，都是有一个问题或一连串的问题，而这本书的内容就是一个答案，或许多答 案。</p>
<h3 id="第二阶段诠释一本书的内容">第二阶段：诠释一本书的内容</h3>
<h4 id="第一个规则-2">第一个规则</h4>
<p>诠释作者使用的关键字，与作者达成共识。</p>
<h4 id="第二个规则-2">第二个规则</h4>
<p>从最重要的句子中 抓出作者的重要主旨。</p>
<h4 id="第三个规则-2">第三个规则</h4>
<p>从最重要的句子中 抓出作者的重要主旨。</p>
<h4 id="第四个规则-2">第四个规则</h4>
<p>)确定作者已经解决了哪些问题，还有哪些是未解决的 。在未解决的问题中，确定哪些是作者认为自己无法解决的问题。</p>
<h2 id="主题阅读层次">主题阅读层次</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[时间管理-如何充分利用你的24小时]]></title>
        <id>https://mzqk.github.io/post/shi-jian-guan-li-ru-he-chong-fen-li-yong-ni-de-24-xiao-shi/</id>
        <link href="https://mzqk.github.io/post/shi-jian-guan-li-ru-he-chong-fen-li-yong-ni-de-24-xiao-shi/">
        </link>
        <updated>2018-10-29T07:36:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="时间管理-如何充分利用你的24小时">时间管理-如何充分利用你的24小时</h1>
<h2 id="你目前如何利用时间">你目前如何利用时间</h2>
<h3 id="意识">意识</h3>
<h4 id="了解你是如何使用时间的">了解你是如何使用时间的</h4>
<p>检查自己的时间花销（时间日志、时间分类统计），意识到哪里的时间用的过多</p>
<h4 id="确定目标建立行动路线图">确定目标建立行动路线图</h4>
<p>规划时间，确定目标（短期目标、长期目标）</p>
<pre><code>把你的任务写在工作清单上，把你的目标写在使命描述中。
任务：至最近某个时间你必须完成的一件杂务、差事或工作。
</code></pre>
<h4 id="正确选择">正确选择</h4>
<pre><code>在当下的满足与牺牲之间进行选择——你可以规划你的人生。而如果你不做出选择，你就只能任由其他力量主宰你的人生。
</code></pre>
<h2 id="使你的时间发挥最大的效用">使你的时间发挥最大的效用</h2>
<h3 id="认识时间是有限的">认识时间是有限的</h3>
<h3 id="合理匹配时间和精力">合理匹配时间和精力</h3>
<h3 id="利用空隙时间">利用空隙时间</h3>
<h3 id="有效的时间管理减少时间浪费">有效的时间管理减少时间浪费</h3>
<h4 id="迅速决策">迅速决策</h4>
<h4 id="快速阅读">快速阅读</h4>
<h4 id="提高记忆力">提高记忆力</h4>
<h3 id="克服拖延">克服拖延</h3>
<pre><code>你不是你的思想。相反，你是在更高层次聆听你的思想。因此，你可以控制头脑中那些消极思想。
你可以采取的唯一脏鞥女奥的一个步骤是学会不认同自己的思想。有时你可以心中的某些想法一笑了之，把它们当做少不更事的小孩子荒诞不经的恶作剧。——《当下的力量》
当你把一种思想想象为一个物体时，你就可以控制它。你就可以一把拖延的想法驱逐出你的头脑，就像你将一只行为不端的猫赶出家门一样。——《思考与致富》
</code></pre>
<h3 id="化繁为简物品和思想">化繁为简（物品和思想）</h3>
<pre><code>《尽管去做：无压力工作的艺术》——大卫-艾伦
</code></pre>
<h3 id="充分计划">充分计划</h3>
<p>每一个小时的计划抵得上五个小时的执行</p>
<h4 id="分批处理">分批处理</h4>
<p>想办法多件事放在一起去完成，而不是单独去完成每一件事，以此来节约你的时间。</p>
<h4 id="充分准备">充分准备</h4>
<p>通过提前进行思考和做好准备，你就可能减少为完成摆在你面前的任何任务所要付出的额努力。</p>
<h4 id="制作任务清单">制作任务清单</h4>
<h4 id="确定优先次序四象限">确定优先次序（四象限）</h4>
<pre><code>《高效能人士的七个习惯》——斯蒂芬-柯维
吃青蛙的原则是：如果你必须吃掉两只青蛙，那么，你要先吃较丑的那一只。——《吃掉那只青蛙》
</code></pre>
<h4 id="高效率">高效率</h4>
<p>假装忙碌使你没有时间进行自我反思</p>
<h4 id="二八定律">二八定律</h4>
<p>一些活动会比另一些活动带来更大的回报；因此，要把大部分精力投入到那些真正能够给你带来“最大效益”的项目上去。</p>
<h4 id="专注">专注</h4>
<p>不要同时处理多个任务，那是自欺欺人</p>
<p>后记<br>
学会迅速丢弃且不内疚<br>
立刻对事务做出决策<br>
分类储存内容<br>
指定时间回复<br>
戴数显秒针的手表<br>
随时记录心中想法<br>
快速阅读<br>
避免重复造轮子<br>
限定时间完成任务<br>
向前看抛弃过去</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Xpath 基础使用]]></title>
        <id>https://mzqk.github.io/post/xpath-ji-chu-shi-yong/</id>
        <link href="https://mzqk.github.io/post/xpath-ji-chu-shi-yong/">
        </link>
        <updated>2018-03-20T07:53:24.000Z</updated>
        <content type="html"><![CDATA[<h1 id="xpath">XPath</h1>
<h2 id="xpath语法">XPath语法</h2>
<h3 id="绝对路径">绝对路径</h3>
<blockquote>
<p>/html/body/tag</p>
</blockquote>
<p>/: 从根节点开始下选取</p>
<h3 id="相对路径">相对路径</h3>
<blockquote>
<p>//tag[@attibute='value']/tag</p>
</blockquote>
<table>
<thead>
<tr>
<th>用法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>选取当前节点</td>
</tr>
<tr>
<td>..</td>
<td>选取当前节点的父节点</td>
</tr>
<tr>
<td>@</td>
<td>选取属性</td>
</tr>
<tr>
<td>[*]</td>
<td>选取节点下标</td>
</tr>
<tr>
<td>text()</td>
<td>选取文字</td>
</tr>
</tbody>
</table>
<h2 id="xpath轴">XPath轴</h2>
<p>contains关键字</p>
<p>startwith关键字<br>
查找父节点<br>
查找平级节点</p>
<h2 id="xpath运算符">XPath运算符</h2>
<p>|<br>
and<br>
or</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[搭建 SS 服务器]]></title>
        <id>https://mzqk.github.io/post/da-jian-ss-fu-wu-qi/</id>
        <link href="https://mzqk.github.io/post/da-jian-ss-fu-wu-qi/">
        </link>
        <updated>2018-02-16T07:52:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="搭建ss服务器">搭建ss服务器</h1>
<h2 id="选择vps">选择VPS</h2>
<h3 id="vultr">Vultr</h3>
<p><em>本人目前正在使用</em></p>
<blockquote>
<p><a href="https://www.vultr.com/?ref=7333360">Vultr</a>全球最大的游戏主机提供商之一，使用它的原因主要是它是按小时计费的,价格也便宜。目前2.5美元每月的已经售完，5美元的每个月也有1T流量。</p>
</blockquote>
<p><a href="https://www.vultr.com/?ref=7333360"><img src="https://www.vultr.com/media/banner_2.png" width="468" height="60"></a></p>
<h3 id="bandwagonhos">BandwagonHos</h3>
<blockquote>
<p><a href="http://bwg.yiqimaila.com/bwg/buy.html">BandwagonHost</a>俗称<em>搬瓦工</em>,性价比很高。这种服务就是只拿来给新手学习Linux，我觉得也是很划得来。</p>
</blockquote>
<h3 id="阿里云">阿里云</h3>
<blockquote>
<p>阿里云的产品在国内可以说是最好的云主机厂商之一。优点是相比外国的服务肯定要稳定些，但有一点不好就是建的网站无论大小都需要备案。</p>
</blockquote>
<h2 id="选择服务器节点">选择服务器节点</h2>
<blockquote>
<p>这里需要申明在国外购买的服务分配给的IP有一定可能会被墙掉，特别是我在Vultr上建的几个东京的站点无一能远程上（可能是人品问题）。</p>
</blockquote>
<blockquote>
<p>网络这方面大家可以自己ping通下，一般延时在200ms左右就能流畅使用。</p>
</blockquote>
<h2 id="选择操作系统">选择操作系统</h2>
<blockquote>
<p>这里没什么好说的，建议选择Centos或Debian。这两个操作系统对今后的学习linux是很有好处的。</p>
</blockquote>
<h2 id="搭建shadowsocks">搭建Shadowsocks</h2>
<p><strong>这处便是本文关键</strong></p>
<h3 id="连接服务器">连接服务器</h3>
<p>Windows用户建议下载<a href="https://www.netsarang.com/download/main.html">Xshell</a><br>
、MAC下可直接ssh连接。</p>
<h3 id="下载shadowsocks">下载Shadowsocks</h3>
<pre><code class="language-bash">#安装python2.7及以上版本，
yum install m2crypto python-setuptools
easy_install pip
pip install shadowsocks
</code></pre>
<p>配置</p>
<pre><code class="language-js">/etc/shadowsocks.json   
    
{
  &quot;server&quot;: &quot;192.0.0.1&quot;,
  &quot;server_port&quot;:8388,
  &quot;local_address&quot;: &quot;127.0.0.1&quot;,
  &quot;local_port&quot;:1080,
  &quot;password&quot;: &quot;12345678&quot;,
  &quot;timeout&quot;:300,
  &quot;method&quot;: &quot;aes-256-cfb&quot;
}
#也可配置多端口(记住要检查相应端口是否开启)
</code></pre>
<p>具体配置</p>
<pre><code class="language-bash">yum install git 
git clone https://github.com/shadowsocks/shadowsocks.git
</code></pre>
<h3 id="运行服务">运行服务</h3>
<pre><code class="language-bash">#检查防火墙信息
firewall-cmd --query-port=443/tcp 
firewall-cmd --zone=public --add-port=443/tcp --permanent 
firewall-cmd --reload
#开启ss服务
ssserver -c /etc/shadowsocks.json -d start
</code></pre>
<h3 id="简易防护">简易防护</h3>
<blockquote>
<p>搭建云主机最重要的隐患就是恶意的网络攻击和厂商的抽风，搭建自行搜索保护服务器的方法（如关闭服务器的root远程登录），然后注意的就是利用网站的服务或则其他功能进行备份。</p>
</blockquote>
<h2 id="加速">加速</h2>
<p>两种加速代码均代理在github上，可在项目中查看详细信息。</p>
<ul>
<li>锐速<br>
<a href="https://github.com/91yun/serverspeeder">https://github.com/91yun/serverspeeder</a></li>
<li>BBR<br>
<a href="https://github.com/teddysun/across">https://github.com/teddysun/across</a></li>
</ul>
<h2 id="下载相应客户端">下载相应客户端</h2>
<p><a href="https://github.com/shadowsocks">https://github.com/shadowsocks</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RHCSA 基本考纲]]></title>
        <id>https://mzqk.github.io/post/rhcsa-ji-ben-kao-gang/</id>
        <link href="https://mzqk.github.io/post/rhcsa-ji-ben-kao-gang/">
        </link>
        <updated>2017-11-14T07:51:25.000Z</updated>
        <content type="html"><![CDATA[<p>1.修改root密码<br>
重启进入grub按e编辑<br>
添加rd.break console=stty0<br>
或者修改rw init=/sysroot/bin<br>
进入修复模式<br>
挂载根系统<br>
mount -o remount.rw /sysroot<br>
切换根目录<br>
chroot /sysroot<br>
修改root密码passwd<br>
重建SELinux安全策略<br>
touch /.autorelabel<br>
退出重启<br>
2.修改本机网络信息<br>
修改主机名<br>
/etc/sysconfig/network<br>
HOSTNAME信息<br>
/etc/sysconfig/network<br>
localhost信息<br>
或<br>
hostnamectl  set-hostname  example.hostname<br>
修改静态网卡信息<br>
/etc/sysconfig/network-scripts/ifcfg-eth0<br>
BOOTPROTO=static<br>
DNS1=<br>
IPADDR=<br>
NETMASK=<br>
GETWAY=<br>
或<br>
nm-connection-editor图形化界面<br>
nmcli  connection  up  &quot;System eth0&quot;<br>
3.搭建默认软件仓库<br>
yum-config-manager --add  http://example.com<br>
修改 /etc/yum.repos.d/example.repo<br>
关闭KEY检查gpgcheck=0<br>
yum clean all<br>
yum repolist<br>
4.创建账户<br>
创建用户组<br>
groupadd adminuser<br>
创建用户<br>
useradd -G admin1  adminuser<br>
创建用户不赋予shell交互<br>
useradd -s /sbin/nologin admin2<br>
设置用户密码<br>
passwd admin1<br>
5.配置文件权限<br>
6.创建定时任务<br>
开启cron服务</p>
<p>给admin1用户编辑一个任务<br>
crontab -e -u admin1<br>
7.创建共享目录<br>
创建目录<br>
mkdir /home/admin<br>
给予用户组adminuser目录所有权<br>
chown  :adminuser  /home/admin<br>
赋予组内用户可读、可写和可执行权限，其他用户无权限<br>
chmod 770 /home/admin<br>
8.安装升级内核<br>
下载内核<br>
wget http://kernel.com/download/kernel.rpm<br>
安装rpm包<br>
rpm -ivh kernel.rpm<br>
重启后确认内核版本<br>
uname -r</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[简单监控windows服务批处理脚本]]></title>
        <id>https://mzqk.github.io/post/jian-dan-jian-kong-windows-fu-wu-pi-chu-li-jiao-ben/</id>
        <link href="https://mzqk.github.io/post/jian-dan-jian-kong-windows-fu-wu-pi-chu-li-jiao-ben/">
        </link>
        <updated>2017-10-30T09:25:03.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-bat">@echo off
rem 定义循环间隔时间和监测的服务：
set secs=6000
set srvname=&quot;Redis&quot;
 
echo.
echo ========================================
echo ==         查询计算机服务的状态，     ==
echo ==     每间隔%secs%秒种进行一次查询，     ==
echo ==     如发现其停止，则立即启动。     ==
echo ========================================
echo.
echo 此脚本监测的服务是：%srvname%
echo.
 
if %srvname%. == . goto end
 
:chkit
set svrst=0
for /F &quot;tokens=1* delims= &quot; %%a in ('net start') do if /I &quot;%%a %%b&quot; == %srvname% set svrst=1
if %svrst% == 0 net start %srvname%
set svrst=
rem 下面的命令用于延时，否则可能会导致cpu单个核心满载。
ping -n %secs% 127.0.0.1 &gt; nul
goto chkit
 
:end
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux文件无法删除处理]]></title>
        <id>https://mzqk.github.io/post/linux-wen-jian-wu-fa-shan-chu-chu-li/</id>
        <link href="https://mzqk.github.io/post/linux-wen-jian-wu-fa-shan-chu-chu-li/">
        </link>
        <updated>2017-10-20T09:20:31.000Z</updated>
        <summary type="html"><![CDATA[<p>文件能够通过ls命令查看，但是却不能做修改</p>
]]></summary>
        <content type="html"><![CDATA[<p>文件能够通过ls命令查看，但是却不能做修改</p>
<!-- more -->
<ol>
<li>文件存在隐藏属性<br>
通过lsattr查看文件属性，再用chattr命令去除特殊属性</li>
<li>通过磁盘inode查找文件<br>
ls -i 查看文件inode节点</li>
<li>通过节点找出文件，并做其它操作<br>
find . -inum 94251 -exec  rm -f {} ;</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[execl合并多表宏]]></title>
        <id>https://mzqk.github.io/post/execl-he-bing-duo-biao-hong/</id>
        <link href="https://mzqk.github.io/post/execl-he-bing-duo-biao-hong/">
        </link>
        <updated>2017-08-17T09:27:40.000Z</updated>
        <content type="html"><![CDATA[<pre><code>Sub 合并当前目录下所有工作簿的全部工作表()
Dim MyPath, MyName, AWbName
Dim Wb As Workbook, WbN As String
Dim G As Long
Dim Num As Long
Dim BOX As String
Application.ScreenUpdating = False
MyPath = ActiveWorkbook.Path
MyName = Dir(MyPath &amp; &quot;\&quot; &amp; &quot;*.xls&quot;)
AWbName = ActiveWorkbook.Name
Num = 0
Do While MyName &lt;&gt; &quot;&quot;
If MyName &lt;&gt; AWbName Then
Set Wb = Workbooks.Open(MyPath &amp; &quot;\&quot; &amp; MyName)
Num = Num + 1
With Workbooks(1).ActiveSheet
.Cells(.Range(&quot;B65536&quot;).End(xlUp).Row + 2, 1) = Left(MyName, Len(MyName) - 4)
For G = 1 To Sheets.Count
Wb.Sheets(G).UsedRange.Copy .Cells(.Range(&quot;B65536&quot;).End(xlUp).Row + 1, 1)
Next
WbN = WbN &amp; Chr(13) &amp; Wb.Name
Wb.Close False
End With
End If
MyName = Dir
Loop
Range(&quot;B1&quot;).Select
Application.ScreenUpdating = True
MsgBox &quot;共合并了&quot; &amp; Num &amp; &quot;个工作薄下的全部工作表。如下：&quot; &amp; Chr(13) &amp; WbN, vbInformation, &quot;提示&quot;
End Sub
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用修改 hosts 文件方法访问外国网络]]></title>
        <id>https://mzqk.github.io/post/shi-yong-xiu-gai-hosts-wen-jian-fang-fa-fang-wen-wai-guo-wang-luo/</id>
        <link href="https://mzqk.github.io/post/shi-yong-xiu-gai-hosts-wen-jian-fang-fa-fang-wen-wai-guo-wang-luo/">
        </link>
        <updated>2017-08-06T07:46:09.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://github.com/MZqk/hosts">hosts下载地址</a></p>
<p>首先科普下我们为什么不能访问Google、Twitter、Facebook 之类的网站</p>
<blockquote>
<p>这是因为我们国家有GFW（英文名称Great Firewall of China），<br>
也称中国防火墙或中国国家防火墙的存在。为什么要有这个东西的<br>
存在呢？对外的说法是保护国内的网络纯净和谐地发展道路,顺带养<br>
活下国内的BAT</p>
</blockquote>
<blockquote>
<p>╮(￣⊿￣)╭<strong>我想GFW的存在意义是保护的是外国友人不被国内傻逼打扰•̀.̫•́✧</strong></p>
</blockquote>
<pre><code>为了方便用户记忆，我们将IP变成一个个的域名来输入到浏览器进行访问。而这使得访问网站时要先将其域名解析成 IP。DNS的作用就是进行IP解析，把域名对应到IP。
在GFW的五种封锁方法中，有一种简单而效果很好的方法是DNS污染。GFW会对DNS的解析过程进行干扰，这会使对某些被干扰的域名返回一个错误的IP地址给你的主机，使你无法正确连接到你要的服务器上读取正确的信息。Hosts 文件本来是用来提高解析效率。在进行 DNS请求以前，系统会先检查自己的Hosts文件中是否有这个地址映射关系，如果有则调用这个IP地址映射，如果没有再向已知的 DNS 服务器提出域名解析。也就是说 Hosts 的请求级别比 DNS 高。当你的Hosts 文件里面有对应的 IP 时，它就会直接访问那个 IP，而不用通过 DNS。所以，当我们直接将Google、Twitter、Facebook 之类的 IP 放入 Hosts 文件后，就可以跳过 DNS的解析这一步，直接就行IP访问，不受 GFW 的 DNS污染干扰了。
</code></pre>
<blockquote>
<p>通俗易懂的说修改host后就能访问Google、Twitter、Facebook等被墙网站。</p>
</blockquote>
<p>下面就来介绍修改hosts文件的方法</p>
<h2 id="windows">windows</h2>
<ul>
<li>修改文件需要管理员权限</li>
</ul>
<ol>
<li>找到文件目录C:\Windows\System32\drivers\etc\hosts</li>
<li>把下载好的hosts文件全部内容复制到C:\WINDOWS\system32\drivers\etc目录中的hosts文件中</li>
<li>保存后在重启浏览器输入https://www.google.com.hk看是否能访问</li>
<li>如果还不可以访问在CMD窗口输入ipconfig /flushdns使其生效。</li>
</ol>
<h2 id="linux-and-mac">Linux and Mac</h2>
<ol>
<li>Linux与Mac的hosts文件都在相同的目录下 <strong>/etc/hosts</strong></li>
<li>同样是用下载好的hosts替代原有的文件</li>
<li>Mac终端输入sudo killall -HUP mDNSResponder使其生效。<br>
Linux终端输入sudo systemctl restart NetworkManager。</li>
</ol>
<p>注意 : 非systemd发行版，终端输入sudo rcnscd restart，如果不清楚请两个都试一次。</p>
<h2 id="android">Android</h2>
<ul>
<li>我们知道Android也是Linux系统中的一种，但其修改办法还是有些许不同</li>
</ul>
<ol>
<li>需要获取root权限</li>
<li>文件所在路径/system/etc/hosts</li>
</ol>
<p>补充一下：</p>
<blockquote>
<p>就是为什么 Hosts的IP要时不时更改，为什么 FB、Twitter 会仍旧上不去。是因为 GFW 的第二个大招，IP 封锁。比如访问国外一个 IP 无法访问，Ping 不通，tracert 这个 IP 后发现，全部在边缘路由器 (GFW) 附近被拦截。换言之，GFW 直接拦截带有这个 IP 头的数据包。所以，如果你更改的 IP 被封锁了，就算你过了 DNS 这一关，也仍旧不能翻过GFW。<strong>而有些站，是直接被屏蔽，无论你怎么添加HOSTS都是不行的。</strong></p>
</blockquote>
]]></content>
    </entry>
</feed>